// domelement.tt

class native DomElement "!Element"

fn repr(this DomElement) String {
  return "<DomElement:" + this.nodeName + " instance>";
}

fn native setattr(this DomElement, :textContent, text String) Void"""
  var_this.textContent = var_text;
"""

fn native getattr(this DomElement, :textContent) String"""
  return var_this.textContent;
"""

fn native getattr(this DomElement, :nodeName) String"""
  return var_this.nodeName;
"""

fn DomElement {
  fn native appendChild(element DomElement) Void"""
    var_this.appendChild(var_element);
  """

  fn native onClick(handler Lambda[Void, DomMouseEvent]) Lambda[Void]"""
    const listener = event => {
      runCallback(stack => {
        var_handler(stack, event);
      }, stack);
    };

    var_this.addEventListener('click', listener);

    return stack => {
      var_this.removeEventListener('click', listener);
    };
  """
}

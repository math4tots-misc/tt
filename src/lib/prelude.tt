
class native Void;
class native Bool;
class native Int;
class native Float;
class native String;

fn error(x $X) Void {
  error(repr(x));
}

fn equals(x $T, y $T) Bool {
  return x is y;
}

fn notEquals(x $T, y $T) Bool {
  return !equals(x, y);
}

fn greaterThanOrEqualTo(x Int, y Int) Bool {
  return !(x < y);
}
fn greaterThan(x $T, y $T) Bool {
  return y < x;
}
fn lessThanOrEqualTo(x $T, y $T) Bool {
  return !(y < x);
}

fn repr(x $T) String {
  return "<" + typestr($T) + " instance>";
}

fn str(x $T) String {
  return repr(x);
}

fn print(x Int) Void {
  print(str(x));
}

fn print(x $T) Void {
  print(str(x));
}

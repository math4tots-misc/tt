// firebase.tt
// utilities for interfacing with firebase

class native Firebase;

fn native new(Firebase,
              apiKey String,
              authDomain String,
              databaseURL String,
              storageBucket String) Firebase"""
  firebase.initializeApp({
    "apiKey": var_apiKey,
    "authDomain": var_authDomain,
    "databaseURL": var_databaseURL,
    "storageBucket": var_storageBucket,
  });
  return firebase;
"""

fn native signInWithRedirect(:Method, fb Firebase) Void"""
  firebase.auth().signInWithRedirect(new firebase.auth.GoogleAuthProvider());
"""

fn native asyncWaitForUserLogin(:Method, fb Firebase) Promise[Void]"""
  return newPromise(stack, (resolve, reject) => {
    const unsubscribe = firebase.auth()["onAuthStateChanged"](user => {
      if (user) {
        resolve();
        unsubscribe();
      }
    });
  });
"""

